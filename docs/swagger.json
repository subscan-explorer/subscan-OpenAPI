{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/check_hash": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Check hash",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.checkHashParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/now": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "common"
                ],
                "summary": "current timestamp",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/account/contributions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Account crowdloan contributions",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountCrowdloanContributionsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.AccountContributedJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/account/referendum": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Account referendum list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountReferendumParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.AccountReferendumJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/account/reward_slash": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Reward or slash list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.rewardSlashParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.AccountEventJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/account/tokens": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Account token list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountTokenParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_service_scan.AccountTokenJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/accounts/statistics": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Account statistics",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountsStatisticsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/subscan_internal_model.AccountRoleCountJson"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/assets/account/balances": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Asset account balances",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetBalancesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/activities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Asset activities",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetActivitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/all": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Assets list all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/asset": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Asset info",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/asset/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Asset holders",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetHolderParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/assets": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Assets list",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/assets/transfers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Asset transfers",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_assets_http.assetTransfersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/block": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Block detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.blockParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.ChainBlockJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/block/header": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Block header",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.blockHeaderParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.BlockHeader"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/bounties/proposal": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Bounty info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.bountyParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.BountyJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/bounties/proposals": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Bounty list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.bountiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.BountySampleJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/collator/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collator"
                ],
                "summary": "Collator Info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_collator.collatorInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/collator/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collator"
                ],
                "summary": "Collator List",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_collator.collatorListParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/collator/meta": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collator"
                ],
                "summary": "Collator Meta",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/events": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract Events",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractsEventsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ContractEventJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract meta",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract List",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractsListParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ContractAccountListJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/meta": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract meta",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "contract_count": {
                                                    "type": "integer"
                                                },
                                                "contract_verified_count": {
                                                    "type": "integer"
                                                },
                                                "transaction_count": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/timeline": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract Timeline",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractTimelineParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ContractTimeline"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/transactions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract transactions",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.contractTxsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ContractTransactionListJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/contracts/verify/compiler_version": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Compiler versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/council/proposal": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Council proposal",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.councilProposalParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "info": {
                                                    "$ref": "#/definitions/subscan_internal_model.CouncilProposalJson"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/council/proposals": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Council proposals",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.councilProposalsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.TechcommProposalSample"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/daily": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Daily stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.dailyStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.DailyStaticJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/daily_token": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Daily token stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.dailyTokenStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.DailyTokenStatusJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/proposal": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Democracy details",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.democracyParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "info": {
                                                    "$ref": "#/definitions/subscan_internal_model.DemocracyJson"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/proposals": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Democracies list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.democraciesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.DemocracySampleJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/referendum": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referendum list(legacy)",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendumParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "info": {
                                                    "$ref": "#/definitions/subscan_internal_model.ReferendumJson"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/referendums": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referendums",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendumsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.DemocracyReferendumSampleJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/seconded": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Democracy seconded list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.democracySecondedParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.DemocracyProposalSeconded"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/democracy/votes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referendum votes list(legacy)",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendumVotesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.DemocracyVoteJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/download/progress": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Download progress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "download key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "timeout",
                        "name": "timeout",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.DProgress"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/event": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Event by index",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.eventInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.ChainEvent"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/event/params": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Event params by index",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.eventParamsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/subscan_internal_model.ChainEventParams"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/evm/abi": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "ABI by method id or event topic",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmAbiSearchParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/account/tokens": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM account tokens",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EVMAccountTokensParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/block": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "Evm block by block number",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EVMBlockParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/blocks": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM Blocks",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmBlocksParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/contract": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM contract detail",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmContractParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/contract/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM contract list",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmContractListParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/contract/solcs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM contract solc versions",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmContractSolcVersionsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/erc721/collectible": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM erc721 collectible detail",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmErc721CollectibleParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/erc721/collectibles": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM erc721 collectibles",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmErc721CollectiblesParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/logs": {
            "post": {
                "description": "EVM event Logs，returns the event logs from an address. The current maximum limit for the number of results returned through pagination is 10,000. If you require more, please adjust the block_range parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM event Logs",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmEventLogsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/meta": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "Evm meta",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/token/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM token holders",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmTokenHoldersParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/token/transfer": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM token transfer",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmTokenTransferParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/tokens": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM erc20/erc721 tokens",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmTokensParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/transaction": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "EVM transaction info",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EVMTransactionParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/evm/v2/transactions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EVM"
                ],
                "summary": "Evm transactions",
                "parameters": [
                    {
                        "description": "body",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_evm_http.EvmTransactionsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/extrinsic": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extrinsic"
                ],
                "summary": "Extrinsic detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.ExtrinsicDetailParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.ExtrinsicDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/extrinsic/params": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extrinsic"
                ],
                "summary": "Extrinsic params",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.extrinsicParamsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/subscan_internal_model.ChainExtrinsicParams"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/fellowship/referendum": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Fellowship referenda details",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.fellowshipReferendumParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.ReferendumV2Json"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/fellowship/referendums": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Fellowship referenda list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.fellowshipReferendumsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ReferendumV2SampleJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/fellowship/statistics": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Fellowship referendum statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.FellowshipReferendumStatisticsJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/fellowship/tracks": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Fellowship referendum tracks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "$ref": "#/definitions/subscan_libs_substrate_storage.ReferendumTracksInfo"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/fellowship/votes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Fellowship referendum votes",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.fellowshipReferendumVotesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ConvictionVoteJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/getRawTx": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extrinsic"
                ],
                "summary": "Extrinsic raw tx",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/log": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "log"
                ],
                "summary": "Block log by index",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.logInfoParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.ChainLogJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/logs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "log"
                ],
                "summary": "Block log list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.logParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "logs": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ChainLogJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/metadata": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Current network metadata",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/multiChain/account": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multiChain"
                ],
                "summary": "MultiChain account",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.multiChainAccountParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/subscan_internal_model.AssetsJson"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/multiChain/balance_value_history": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multiChain"
                ],
                "summary": "Account balance value history",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountBalanceValueHistoryParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/subscan_internal_dao.AccountBalanceValueHistory"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/multiChain/balance_value_stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multiChain"
                ],
                "summary": "Account balance value stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountBalanceValueStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "max": {
                                                    "type": "number"
                                                },
                                                "min": {
                                                    "type": "number"
                                                },
                                                "prev24H": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/multiChain/identities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multiChain"
                ],
                "summary": "MultiChain identities",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.identitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/subscan_internal_model.IdentityJson"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/multiChain/price": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multiChain"
                ],
                "summary": "MultiChain price",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.identitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/account/balances": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken holder balance",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenHolderBalanceParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/activities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken activities",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenActivitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken holders",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenHoldersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokeInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/info/item": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken item detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenItemParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/items": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken item all",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenItemsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multiTokens/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enjin"
                ],
                "summary": "Enjin multiToken list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_enjin_multiTokens_http.EnjinMultiTokenParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscan_internal_plugin_share.J"
                        }
                    }
                }
            }
        },
        "/api/scan/multisig": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multisig"
                ],
                "summary": "Multisig extrinsic",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.multisigParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.MultisigExtrinsicJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/multisigs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multisig"
                ],
                "summary": "Multisig extrinsic list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.multisigParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "multisig": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.MultisigExtrinsicJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/multisigs/details": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "multisig"
                ],
                "summary": "Multisig extrinsic details list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.multisigsDetailsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "multisig": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.MultisigExtrinsicDetailsJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/nfts/account/balances": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFTs"
                ],
                "summary": "NFT account balances",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_nfts_http.NftAccountBalancesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_plugin_nfts_db.CollectionBalance"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/nfts/activities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFTs"
                ],
                "summary": "NFT activities",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_nfts_http.NftActivitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_plugin_nfts_db.NftRelateExtrinsic"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/nfts/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFTs"
                ],
                "summary": "NFT info",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_nfts_http.NftParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_plugin_nfts_db.NftsJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/nfts/info/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFTs"
                ],
                "summary": "NFT holders",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_nfts_http.NftHoldersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_plugin_nfts_db.NftHolderJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/nfts/info/item": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFTs"
                ],
                "summary": "NFT item",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_nfts_http.NftItemParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_plugin_nfts_db.CollectionItemJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/nfts/info/items": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFTs"
                ],
                "summary": "NFT items",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_nfts_http.NftItemsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_plugin_nfts_db.ItemSample"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/nfts/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFTs"
                ],
                "summary": "NFTs list",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_nfts_http.NftsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_plugin_nfts_db.NftsSampleJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/activities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools Activities",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsActivitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/pool": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools Info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/pool/member/vote": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools Member Vote",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsMemberVoteParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/pool/members": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools Members",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsMembersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/pools": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools List",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsListParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/nomination_pool/rewards": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominationPools"
                ],
                "summary": "Nomination Pools Rewards",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_pluginv2_pallets_nominationPool.nominationPoolsRewardsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/scan/open/currencies": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "supported currencies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "currencies": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/open/price": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "currency price",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.currencyPriceParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_service_scan.CurrencyPrice"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/open/price_converter": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "currency price converter",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.currencyConverterParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_server_http.CurrencyConverter"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/auctionCompetitors": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Auction competitors",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.auctionCompetitorsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/auction_funds_stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Auction funds stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.auctionFundsStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/subscan_internal_model.ParachainFundHistoryStatJson"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/auction_leading_blocks": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Auction leading blocks",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.auctionLeadingBlocksParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/subscan_internal_service_scan.uniqueBid"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/auctions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "PLO auctions list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.parachainAuctionsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "auctions": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ParachainAuction"
                                                    }
                                                },
                                                "count": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/bestBid": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Best bid",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.bestBidParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.ParachainSlotWinner"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/bids": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "PLO slot bids list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.parachainSlotBidsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "bids": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ParachainSlotWinner"
                                                    }
                                                },
                                                "count": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/contributes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Crowdloan fund contributes list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.parachainFundContributesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "contributes": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ParachainFundContribution"
                                                    }
                                                },
                                                "count": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/fundStat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Crowdloan fund stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.parachainFundContributesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ParachainFundHistoryStatJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/funds": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Crowdloan funds list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.crowdloanFundsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "funds": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ParachainFund"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Parachain info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.parachainInfoParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "chains": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ParachainInfoJson"
                                                    }
                                                },
                                                "count": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Parachain list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.paraChainListParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "chains": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ParaChainSample"
                                                    }
                                                },
                                                "count": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/meta": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Parachain meta",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.ParaChainMetaJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/predict": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Winner predict",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.winnerPredictParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/subscan_internal_model.ParachainSlotWinner"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/parachain/registerinfo": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parachain"
                ],
                "summary": "Parachain register info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "paraID": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    }
                                                },
                                                "relay_chain": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/pendingExtrinsics": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extrinsic"
                ],
                "summary": "Pending extrinsic",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "extrinsics": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ChainExtrinsicJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/preimage/details": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Preimage details",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.preimageDetailsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.PreimageJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/preimage/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Preimage list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.preimageListParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.PreimageSampleJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/price/history": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Price history",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.priceHistoryParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "ema30_average": {
                                                    "type": "number"
                                                },
                                                "ema7_average": {
                                                    "type": "number"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_service_scan.Price"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/proxy/extrinsics": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "Proxy extrinsics list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.proxyExtrinsicsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "extrinsics": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ProxyChainExtrinsicJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/referenda/referendum": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referenda details",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendumV2Params"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.ReferendumV2Json"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/referenda/referendums": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referenda list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendumsV2Params"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ReferendumV2SampleJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/referenda/statistics": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referendum statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.ReferendumStatisticsJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/referenda/tracks": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referendum tracks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "$ref": "#/definitions/subscan_libs_substrate_storage.ReferendumTracksInfo"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/referenda/votes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Referenda votes list(v2)",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.referendaVotesV2Params"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ConvictionVoteJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/resource_count": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Resource count",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.ResourceCountParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.AccountResourceCountJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/runtime/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runtime"
                ],
                "summary": "Runtime list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.RuntimeVersion"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/runtime/metadata": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runtime"
                ],
                "summary": "Runtime metadata",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.runtimeMetadataParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "info": {
                                                    "type": "object",
                                                    "properties": {
                                                        "metadata": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/types.MetadataModules"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/staking/era_stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Era stat list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.eraStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ValidatorStatJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/staking/nominator": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Nominator info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.nominatorParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_model.NominatorDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/staking/nominators": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Nominators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.nominatorsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.NominatorJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/staking/unbonding": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Unbonding list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.unbondingParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/subscan_libs_substrate_derive.Unbonding"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/staking/validator": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Validator info",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.validatorParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "info": {
                                                    "$ref": "#/definitions/subscan_internal_model.ValidatorJson"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/staking/validator/bond_stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Validator bond stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.bondStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.EraBondStat"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/staking/validators": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Validators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.validatorsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ValidatorJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/staking/voted": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Voted validators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.votedParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.AccountNominateList"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/staking/waiting": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Waiting validators list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.waitingValidatorsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ValidatorWaiting"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/staking_history": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Staking reward sum",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "sum": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/swork/daily": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage daily stat",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustStorageDailyStatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/group": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage group detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustGroupParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/group/members": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage group members",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustMembersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/groups": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage groups",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustGroupsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/member": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage group member detail",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustMemberParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/member/files": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage group member files",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustFilesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/member/orders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage group member orders",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustMemberOrdersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/swork/orders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crustStorage"
                ],
                "summary": "Crust storage orders",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_crust_swork_http.CrustOrdersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/techcomm/proposal": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Techcomm proposal",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.techcommProposalParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "info": {
                                                    "$ref": "#/definitions/subscan_internal_model.TechcommProposalJson"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/techcomm/proposals": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Techcomm proposals",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.techcommProposalsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.TechcommProposalSample"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/token": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Token list(token symbol)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "detail": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "$ref": "#/definitions/subscan_internal_service_scan_token.Token"
                                                    }
                                                },
                                                "token": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/token/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Token holders list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.tokenHoldersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.AccountSampleJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/token/unique_id": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Token list(token unique_id)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "detail": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "$ref": "#/definitions/subscan_internal_service_scan_token.Token"
                                                    }
                                                },
                                                "token": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "unique_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/treasury/proposal": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Treasury proposal",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.treasuryProposalParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "info": {
                                                    "$ref": "#/definitions/subscan_internal_model.TreasuryProposalDetailJson"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/treasury/proposals": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Treasury proposals",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.treasuryProposalsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.TreasuryProposalJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/treasury/tip": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Treasury tip",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.treasuryTipParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "info": {
                                                    "$ref": "#/definitions/subscan_internal_model.TreasuryTipJson"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/treasury/tippers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Treasury tippers",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.treasuryTipperParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.TreasuryTipperJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/treasury/tips": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "governance"
                ],
                "summary": "Treasury tips",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.treasuryTipsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.TreasuryTip"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/unique/account/balances": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniqueNetwork"
                ],
                "summary": "NFT account balances",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_unique_unique_http.UniqueAccountBalancesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_plugin_unique_unique_db.CollectionBalance"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/unique/activities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniqueNetwork"
                ],
                "summary": "NFT activities",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_unique_unique_http.UniqueActivitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_plugin_unique_unique_db.NftRelateExtrinsic"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/unique/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniqueNetwork"
                ],
                "summary": "NFT info",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_unique_unique_http.UniqueParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_plugin_unique_unique_db.NftsJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/unique/info/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniqueNetwork"
                ],
                "summary": "NFT holders",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_unique_unique_http.UniqueHoldersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_plugin_unique_unique_db.NftHolderJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/unique/info/item": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniqueNetwork"
                ],
                "summary": "NFT item",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_unique_unique_http.UniqueItemParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/subscan_internal_plugin_unique_unique_db.CollectionItemJson"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/unique/info/items": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniqueNetwork"
                ],
                "summary": "NFT items",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_unique_unique_http.UniqueItemsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_plugin_unique_unique_db.ItemSample"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/unique/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniqueNetwork"
                ],
                "summary": "NFTs list",
                "parameters": [
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_unique_unique_http.UniquesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_plugin_unique_unique_db.NftsSampleJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/account/balances": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques holders item balances",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.UniquesBalancesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/activities": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques activities",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.UniquesActivitiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/all": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques list all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/unique": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques info",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.uniqueParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/unique/holders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques holders",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.UniquesHoldersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/unique/item": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques item info",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.uniqueItemParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/unique/items": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques items",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.uniqueItemsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/subscan_internal_plugin_share.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_plugin_uniques_db.ItemSample"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/scan/uniques/uniques": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uniques"
                ],
                "summary": "Uniques list",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_plugin_uniques_http.uniquesListParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/scan/vesting_release": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vesting"
                ],
                "summary": "Vesting release list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.vestingReleaseParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.VestingRelease"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/account/reward_slash": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staking"
                ],
                "summary": "Account reward and slash list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.rewardSlashV2Params"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.StakingAccountEvent"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/accounts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Accounts list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.accountsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.AccountSampleJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/blocks": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Blocks list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.blocksParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "blocks": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.SampleBlockV2Json"
                                                    }
                                                },
                                                "count": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/daily": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Daily stat(v2)",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.dailyStatV2Param"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "list": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.DailyStaticJsonV2"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/events": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Events list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.eventsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "events": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ChainEventV2Json"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/extrinsics": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extrinsic"
                ],
                "summary": "Extrinsics list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.extrinsicsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "extrinsics": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ChainExtrinsicV2Json"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/logs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "log"
                ],
                "summary": "Logs list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.logsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "logs": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.ChainLogJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/token/native": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Native token list",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.tokenNativeParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "provider": {
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "$ref": "#/definitions/internal_server_http.tokenJson"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/token/providers": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Tokens providers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "providers": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/internal_server_http.providerActiveJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/token/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Tokens search",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.tokensSearchParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/internal_server_http.tokenJson"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/tokens": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Tokens(v2)",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.tokensV2Param"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "provider": {
                                                    "type": "string"
                                                },
                                                "tokens": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/internal_server_http.tokenJson"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/scan/transfers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Transfers list",
                "parameters": [
                    {
                        "description": "params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server_http.transfersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_server_http.J"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "$ref": "#/definitions/subscan_internal_model.TransferHistoryTokensTotal"
                                                },
                                                "transfers": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/subscan_internal_model.TransferHistory"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/readiness": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Readiness Probe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_plugin_assets_http.assetActivitiesParams": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_assets_http.assetBalancesParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_assets_http.assetHolderParams": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_assets_http.assetParam": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "number"
                }
            }
        },
        "internal_plugin_assets_http.assetTransfersParams": {
            "type": "object",
            "required": [
                "asset_id"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "after_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "asset_id": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "direction": {
                    "type": "string",
                    "enum": [
                        "all",
                        "sent",
                        "received"
                    ]
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "include_total": {
                    "type": "boolean"
                },
                "max_amount": {
                    "type": "string"
                },
                "min_amount": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "internal_plugin_assets_http.assetsParam": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "description": "assets symbol or name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustFilesParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustGroupParams": {
            "type": "object",
            "required": [
                "group_owner"
            ],
            "properties": {
                "group_owner": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustGroupsParams": {
            "type": "object",
            "properties": {
                "group_owner": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "power",
                        "total_stake",
                        "members",
                        "cap"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustMemberOrdersParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "all_orders": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustMemberParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustMembersParams": {
            "type": "object",
            "required": [
                "group_owner"
            ],
            "properties": {
                "group_owner": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustOrdersParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expired_status": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_crust_swork_http.CrustStorageDailyStatParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "enum": [
                        "nodes",
                        "storage",
                        "files"
                    ]
                },
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokeInfoParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "multiToken collection id",
                    "type": "number"
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenActivitiesParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "multiToken collection id",
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "token_id": {
                    "description": "Optional. filter by token id",
                    "type": "number"
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenHolderBalanceParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "collection_id": {
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenHoldersParams": {
            "type": "object",
            "required": [
                "collection_id"
            ],
            "properties": {
                "collection_id": {
                    "description": "multiToken collection id",
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "token_id": {
                    "description": "optional. filter by token id",
                    "type": "number"
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenItemParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "token_id": {
                    "type": "number"
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenItemsParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "Optional. multiToken collection id",
                    "type": "number"
                },
                "order": {
                    "description": "Optional, order sort, default desc",
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "description": "Optional, order field",
                    "type": "string",
                    "enum": [
                        "holders",
                        "item_id",
                        "create_at",
                        "transfer_count"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "description": "Owner        string           `json:\"owner\" binding:\"omitempty,addr\"`           // Optional. multiToken owner address. Only support ss58 address",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_enjin_multiTokens_http.EnjinMultiTokenParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "Optional, multiToken collection id",
                    "type": "number"
                },
                "order": {
                    "description": "Optional, order sort, default desc",
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "description": "Optional, order field",
                    "type": "string",
                    "enum": [
                        "items",
                        "holders",
                        "collection_id",
                        "transfer_count"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "description": "Optional, multiToken collection name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            }
        },
        "internal_plugin_evm_http.EVMAccountTokensParam": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_evm_http.EVMBlockParam": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "internal_plugin_evm_http.EVMTransactionParam": {
            "type": "object",
            "properties": {
                "extrinsic_index": {
                    "description": "Optional, ExtrinsicIndex, such as 4780334-2",
                    "type": "string",
                    "example": "4780334-2"
                },
                "hash": {
                    "description": "Optional, Also known as Transaction ID (TxID).",
                    "type": "string",
                    "example": "0x09bc77f61a670ea22b66e1e440d2c2163fb43e11974e3563109630571fae42ac"
                }
            }
        },
        "internal_plugin_evm_http.EvmAbiSearchParams": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_plugin_evm_http.EvmBlocksParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_evm_http.EvmContractListParam": {
            "type": "object",
            "properties": {
                "contracts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "balances",
                        "verify_time",
                        "transaction_count"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "internal_plugin_evm_http.EvmContractParam": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_evm_http.EvmContractSolcVersionsParam": {
            "type": "object",
            "properties": {
                "releases": {
                    "type": "boolean"
                }
            }
        },
        "internal_plugin_evm_http.EvmErc721CollectibleParam": {
            "type": "object",
            "required": [
                "token_id"
            ],
            "properties": {
                "contract": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_evm_http.EvmErc721CollectiblesParam": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_evm_http.EvmEventLogsParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "0x4d73adb72bc3dd368966edd0f0b2148401a178e2"
                },
                "block_range": {
                    "type": "string",
                    "example": "400000-400001"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_evm_http.EvmTokenHoldersParam": {
            "type": "object",
            "properties": {
                "contract": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_evm_http.EvmTokenTransferParam": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "category": {
                    "type": "string",
                    "enum": [
                        "erc20",
                        "erc721"
                    ]
                },
                "contract": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "internal_plugin_evm_http.EvmTokensParam": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "enum": [
                        "erc20",
                        "erc721"
                    ]
                },
                "contracts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "holders",
                        "transfer_count",
                        "symbol"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            }
        },
        "internal_plugin_evm_http.EvmTransactionsParam": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "after_id": {
                    "type": "integer"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 1
                },
                "block_range": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "direction": {
                    "type": "string",
                    "default": "from",
                    "enum": [
                        "from",
                        "to",
                        "all"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "internal_plugin_nfts_http.NftAccountBalancesParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "EaBRZ3VBUFEd6GT9kxXXk9C5gsYC6zAsNfxahmpusrYPtPf"
                },
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "page": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_plugin_nfts_http.NftActivitiesParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "Collection id, required",
                    "type": "number",
                    "example": 1
                },
                "item_id": {
                    "description": "Item id, optional",
                    "type": "number",
                    "example": 1
                },
                "page": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_plugin_nfts_http.NftHoldersParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "page": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_plugin_nfts_http.NftItemParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "Collection id, required",
                    "type": "number"
                },
                "item_id": {
                    "description": "Item id, required",
                    "type": "number"
                }
            }
        },
        "internal_plugin_nfts_http.NftItemsParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "order": {
                    "description": "Optional, order sort, default desc",
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "description": "Optional, order field",
                    "type": "string",
                    "enum": [
                        "item_id",
                        "create_at",
                        "transfer_count"
                    ]
                },
                "owner": {
                    "description": "Optional, owner address",
                    "type": "string",
                    "example": "EaBRZ3VBUFEd6GT9kxXXk9C5gsYC6zAsNfxahmpusrYPtPf"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_plugin_nfts_http.NftParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "internal_plugin_nfts_http.NftsParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "order": {
                    "description": "Optional, order sort, default desc",
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ],
                    "example": "desc"
                },
                "order_field": {
                    "description": "Optional, order field",
                    "type": "string",
                    "enum": [
                        "items",
                        "holders",
                        "collection_id",
                        "transfer_count"
                    ],
                    "example": "holders"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_unique_unique_http.UniqueAccountBalancesParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "EaBRZ3VBUFEd6GT9kxXXk9C5gsYC6zAsNfxahmpusrYPtPf"
                },
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "page": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_plugin_unique_unique_http.UniqueActivitiesParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "Collection id, required",
                    "type": "number",
                    "example": 1
                },
                "item_id": {
                    "description": "Item id, optional",
                    "type": "number",
                    "example": 1
                },
                "page": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_plugin_unique_unique_http.UniqueHoldersParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "page": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_plugin_unique_unique_http.UniqueItemParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "description": "Collection id, required",
                    "type": "number"
                },
                "item_id": {
                    "description": "Item id, required",
                    "type": "number"
                }
            }
        },
        "internal_plugin_unique_unique_http.UniqueItemsParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "order": {
                    "description": "Optional, order sort, default desc",
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "description": "Optional, order field",
                    "type": "string",
                    "enum": [
                        "item_id",
                        "create_at",
                        "transfer_count"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "nft",
                        "nested",
                        "bundle"
                    ]
                }
            }
        },
        "internal_plugin_unique_unique_http.UniqueParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "internal_plugin_unique_unique_http.UniquesParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "order": {
                    "description": "Optional, order sort, default desc",
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ],
                    "example": "desc"
                },
                "order_field": {
                    "description": "Optional, order field",
                    "type": "string",
                    "enum": [
                        "items",
                        "holders",
                        "collection_id",
                        "transfer_count"
                    ],
                    "example": "holders"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_uniques_http.UniquesActivitiesParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "item_id": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_uniques_http.UniquesBalancesParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "EaBRZ3VBUFEd6GT9kxXXk9C5gsYC6zAsNfxahmpusrYPtPf"
                },
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "page": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_plugin_uniques_http.UniquesHoldersParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_uniques_http.uniqueItemParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "item_id": {
                    "type": "integer"
                }
            }
        },
        "internal_plugin_uniques_http.uniqueItemsParams": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "order": {
                    "description": "Optional, order sort, default desc",
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "description": "Optional, order field",
                    "type": "string",
                    "enum": [
                        "item_id",
                        "create_at",
                        "transfer_count"
                    ]
                },
                "owner": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_plugin_uniques_http.uniqueParam": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                }
            }
        },
        "internal_plugin_uniques_http.uniquesListParam": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "order": {
                    "description": "Optional, order sort, default desc",
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "description": "Optional, order field",
                    "type": "string",
                    "enum": [
                        "collection_id",
                        "items",
                        "holders",
                        "transfer_count"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "description": "uniques name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            }
        },
        "internal_pluginv2_pallets_collator.Status": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "Invulnerable",
                "Candidate"
            ]
        },
        "internal_pluginv2_pallets_collator.collatorInfoParams": {
            "type": "object",
            "required": [
                "account"
            ],
            "properties": {
                "account": {
                    "type": "string"
                }
            }
        },
        "internal_pluginv2_pallets_collator.collatorListParams": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "account",
                        "bond",
                        "last_change_block",
                        "last_authored_block"
                    ]
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "status": {
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/internal_pluginv2_pallets_collator.Status"
                        }
                    ]
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsActivitiesParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "pool_id": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsInfoParams": {
            "type": "object",
            "properties": {
                "pool_id": {
                    "type": "integer"
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsListParams": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string",
                    "enum": [
                        "Destroying",
                        "Open",
                        "Blocked",
                        "Destroyed"
                    ]
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsMemberVoteParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsMembersParams": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "pool_id": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_pluginv2_pallets_nominationPool.nominationPoolsRewardsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 0
                },
                "pool_id": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "internal_server_http.CurrencyConverter": {
            "type": "object",
            "properties": {
                "output": {
                    "type": "number"
                },
                "price": {
                    "$ref": "#/definitions/subscan_internal_service_scan.CurrencyPrice"
                }
            }
        },
        "internal_server_http.ExtrinsicDetailParams": {
            "type": "object",
            "properties": {
                "events_limit": {
                    "type": "integer"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "focus": {
                    "description": "only using for subscan",
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "only_extrinsic_event": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.J": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {},
                "generated_at": {
                    "type": "integer",
                    "example": 1699600641
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "internal_server_http.ResourceCountParams": {
            "type": "object",
            "required": [
                "resource"
            ],
            "properties": {
                "account": {
                    "type": "string"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "resource": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.accountBalanceValueHistoryParams": {
            "type": "object",
            "required": [
                "address",
                "end",
                "start"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.accountBalanceValueStatParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.accountCrowdloanContributionsParams": {
            "type": "object",
            "required": [
                "who"
            ],
            "properties": {
                "include_total": {
                    "type": "boolean"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "who": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.accountReferendumParams": {
            "type": "object",
            "required": [
                "account"
            ],
            "properties": {
                "account": {
                    "type": "string"
                },
                "module": {
                    "type": "string",
                    "enum": [
                        "democracy",
                        "referendum"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.accountTokenParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.accountsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "type": "string",
                    "enum": [
                        "validator",
                        "nominator",
                        "councilMember",
                        "techcomm",
                        "registrar",
                        "system",
                        "module",
                        "evm",
                        "nominationPool",
                        "proxies",
                        "proxy",
                        "multisig",
                        "multisigMember",
                        "fellowship",
                        "onChainIdentity",
                        "convictionDelegate",
                        "convictionDelegated",
                        "democracyDelegate",
                        "democracyDelegated"
                    ]
                },
                "max_balance": {
                    "type": "string"
                },
                "min_balance": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "balance",
                        "locked",
                        "ring_lock"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.accountsStatisticsParams": {
            "type": "object",
            "properties": {
                "exclude_system": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "assets",
                        "role"
                    ]
                }
            }
        },
        "internal_server_http.auctionCompetitorsParams": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                },
                "includingFund": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.auctionFundsStatParams": {
            "type": "object",
            "properties": {
                "auction_id": {
                    "type": "integer"
                },
                "end": {
                    "type": "string"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day",
                        "hour",
                        "6hour"
                    ]
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.auctionLeadingBlocksParams": {
            "type": "object",
            "required": [
                "auction_id"
            ],
            "properties": {
                "auction_id": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.bestBidParams": {
            "type": "object",
            "required": [
                "bid_id"
            ],
            "properties": {
                "bid_id": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.blockHeaderParams": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 10000
                }
            }
        },
        "internal_server_http.blockParams": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string",
                    "example": "0xa8cba357ea4a7d160eb98d37979dffd7213b1dad592a551b391f96c51b19020b"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 10000
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "only_head": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.blocksParams": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.bondStatParams": {
            "type": "object",
            "required": [
                "stash"
            ],
            "properties": {
                "stash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.bountiesParams": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "historical",
                        "active"
                    ]
                }
            }
        },
        "internal_server_http.bountyParams": {
            "type": "object",
            "properties": {
                "proposal_id": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.checkHashParam": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.contractInfoParams": {
            "type": "object",
            "properties": {
                "contract": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.contractTimelineParams": {
            "type": "object",
            "properties": {
                "contract": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.contractTxsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "result": {
                    "type": "boolean"
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.contractsEventsParams": {
            "type": "object",
            "properties": {
                "contract": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.contractsListParams": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "verify_time",
                        "transaction_count"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.councilProposalParams": {
            "type": "object",
            "properties": {
                "proposal_id": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.councilProposalsParams": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.crowdloanFundsParams": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                },
                "bid_id": {
                    "type": "string"
                },
                "first_period": {
                    "type": "integer"
                },
                "from_block": {
                    "type": "integer"
                },
                "from_history": {
                    "type": "boolean"
                },
                "fund_id": {
                    "type": "string"
                },
                "last_period": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "para_id": {
                    "type": "integer"
                },
                "para_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "progress": {
                    "type": "boolean"
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "status": {
                    "type": "integer"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "to_block": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.currencyConverterParams": {
            "type": "object",
            "required": [
                "from",
                "quote",
                "value"
            ],
            "properties": {
                "from": {
                    "type": "string"
                },
                "quote": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "internal_server_http.currencyPriceParams": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "string"
                },
                "quote": {
                    "type": "string",
                    "enum": [
                        "USD"
                    ]
                },
                "time": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "internal_server_http.dailyStatParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "end": {
                    "type": "string",
                    "example": "2023-06-01"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day",
                        "hour",
                        "6hour"
                    ]
                },
                "start": {
                    "type": "string",
                    "example": "2023-05-01"
                }
            }
        },
        "internal_server_http.dailyStatV2Param": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "end": {
                    "type": "string",
                    "example": "2023-06-01"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day",
                        "hour",
                        "6hour"
                    ]
                },
                "start": {
                    "type": "string",
                    "example": "2023-05-01"
                }
            }
        },
        "internal_server_http.dailyTokenStatParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "end": {
                    "type": "string",
                    "example": "2023-06-01"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day"
                    ]
                },
                "start": {
                    "type": "string",
                    "example": "2023-05-01"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.democraciesParams": {
            "type": "object",
            "properties": {
                "order_field": {
                    "type": "string",
                    "enum": [
                        "seconded_count",
                        "proposal_id"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "historical",
                        "active"
                    ]
                }
            }
        },
        "internal_server_http.democracyParams": {
            "type": "object",
            "properties": {
                "democracy_id": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.democracySecondedParams": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "proposal_id": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.eraStatParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.eventInfoParams": {
            "type": "object",
            "required": [
                "event_index"
            ],
            "properties": {
                "event_index": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.eventParamsParams": {
            "type": "object",
            "required": [
                "event_index"
            ],
            "properties": {
                "event_index": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.eventsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "after_id": {
                    "type": "integer"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 0
                },
                "block_range": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "finalized": {
                    "type": "boolean"
                },
                "focus": {
                    "type": "string"
                },
                "module": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "phase": {
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2
                    ]
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.extrinsicParamsParams": {
            "type": "object",
            "required": [
                "extrinsic_index"
            ],
            "properties": {
                "extrinsic_index": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.extrinsicsParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "after_id": {
                    "type": "integer"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 0
                },
                "block_range": {
                    "type": "string"
                },
                "call": {
                    "type": "string"
                },
                "module": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "signed": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.fellowshipReferendumParams": {
            "type": "object",
            "properties": {
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.fellowshipReferendumVotesParams": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.fellowshipReferendumsParams": {
            "type": "object",
            "properties": {
                "origin": {
                    "type": "string"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "completed",
                        "active"
                    ]
                }
            }
        },
        "internal_server_http.identitiesParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.logInfoParam": {
            "type": "object",
            "required": [
                "log_index"
            ],
            "properties": {
                "log_index": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.logParams": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer",
                    "minimum": 0
                },
                "block_range": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "from": {
                    "type": "integer"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "to": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.logsParams": {
            "type": "object",
            "properties": {
                "after_id": {
                    "type": "integer"
                },
                "block_num": {
                    "type": "integer",
                    "minimum": 0
                },
                "block_range": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.multiChainAccountParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.multisigParams": {
            "type": "object",
            "required": [
                "multi_id"
            ],
            "properties": {
                "call_hash": {
                    "type": "string",
                    "example": "0xd43816694f042d9e199687ccdc60f7ef4a353ff38fe069a8fe1575323bcd5ce3"
                },
                "multi_id": {
                    "type": "string",
                    "example": "14661803-2"
                }
            }
        },
        "internal_server_http.multisigsDetailsParams": {
            "type": "object",
            "required": [
                "account"
            ],
            "properties": {
                "account": {
                    "type": "string",
                    "example": "14RYaXRSqb9rPqMaAVp1UZW2czQ6dMNGMbvukwfifi6m8ZgZ"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Approval",
                        "Executed",
                        "Cancelled",
                        "Failed"
                    ]
                }
            }
        },
        "internal_server_http.nominatorParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.nominatorsParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "rank_nominator",
                        "bonded"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.paraChainListParams": {
            "type": "object",
            "properties": {
                "filter_anonymous": {
                    "type": "boolean"
                },
                "order": {
                    "type": "string"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "para_id": {
                    "type": "integer"
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.parachainAuctionsParams": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.parachainFundContributesParams": {
            "type": "object",
            "properties": {
                "from_history": {
                    "type": "boolean"
                },
                "fund_id": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "para_id": {
                    "type": "integer"
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "who": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.parachainInfoParams": {
            "type": "object",
            "properties": {
                "filter_anonymous": {
                    "type": "boolean"
                },
                "order": {
                    "type": "string"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "para_id": {
                    "type": "integer"
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.parachainSlotBidsParams": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                },
                "bid_id": {
                    "type": "string"
                },
                "bidder": {
                    "type": "string"
                },
                "first_period": {
                    "type": "integer"
                },
                "from_block": {
                    "type": "integer"
                },
                "from_history": {
                    "type": "boolean"
                },
                "fund_id": {
                    "type": "string"
                },
                "last_period": {
                    "type": "integer"
                },
                "latest": {
                    "type": "boolean"
                },
                "order": {
                    "type": "string"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "para_id": {
                    "type": "integer"
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "source": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "to_block": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.preimageDetailsParams": {
            "type": "object",
            "required": [
                "hash"
            ],
            "properties": {
                "hash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.preimageListParams": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "inline",
                        "preimage"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "cleared",
                        "unrequested",
                        "requested"
                    ]
                }
            }
        },
        "internal_server_http.priceHistoryParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "currency": {
                    "type": "string"
                },
                "end": {
                    "type": "string",
                    "example": "2023-06-01"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "day",
                        "hour",
                        "6hour",
                        "12hour"
                    ]
                },
                "start": {
                    "type": "string",
                    "example": "2023-05-01"
                }
            }
        },
        "internal_server_http.providerActiveJson": {
            "type": "object",
            "properties": {
                "can_legacy": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.proxyExtrinsicsParams": {
            "type": "object",
            "required": [
                "account"
            ],
            "properties": {
                "account": {
                    "description": "Current network account",
                    "type": "string",
                    "example": "14RYaXRSqb9rPqMaAVp1UZW2czQ6dMNGMbvukwfifi6m8ZgZ"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "example": "desc"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.referendaVotesV2Params": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "conviction",
                        "amount",
                        "votes"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Ayes",
                        "Nays",
                        "Abstains"
                    ]
                },
                "valid": {
                    "type": "string",
                    "enum": [
                        "valid",
                        "invalid"
                    ]
                }
            }
        },
        "internal_server_http.referendumParams": {
            "type": "object",
            "properties": {
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.referendumV2Params": {
            "type": "object",
            "properties": {
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.referendumVotesParams": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "referendum_index": {
                    "type": "integer",
                    "minimum": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "conviction",
                        "amount",
                        "votes"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Ayes",
                        "Nays"
                    ]
                },
                "valid": {
                    "type": "string",
                    "enum": [
                        "valid",
                        "invalid"
                    ]
                }
            }
        },
        "internal_server_http.referendumsParams": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "completed",
                        "active"
                    ]
                }
            }
        },
        "internal_server_http.referendumsV2Params": {
            "type": "object",
            "properties": {
                "origin": {
                    "type": "string"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "completed",
                        "active"
                    ]
                }
            }
        },
        "internal_server_http.rewardSlashParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "category": {
                    "type": "string",
                    "enum": [
                        "Reward",
                        "Slash"
                    ]
                },
                "is_stash": {
                    "type": "boolean"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.rewardSlashV2Params": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "category": {
                    "type": "string",
                    "enum": [
                        "Reward",
                        "Slash"
                    ]
                },
                "claimed_filter": {
                    "type": "string",
                    "enum": [
                        "unclaimed",
                        "claimed"
                    ]
                },
                "is_stash": {
                    "type": "boolean"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.runtimeMetadataParams": {
            "type": "object",
            "properties": {
                "spec": {
                    "description": "Runtime version",
                    "type": "integer",
                    "example": 9430
                }
            }
        },
        "internal_server_http.techcommProposalParams": {
            "type": "object",
            "properties": {
                "proposal_id": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.techcommProposalsParams": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.tokenExtendsJson": {
            "type": "object",
            "properties": {
                "holders": {
                    "type": "integer"
                }
            }
        },
        "internal_server_http.tokenHoldersParams": {
            "type": "object",
            "properties": {
                "included_zero_balance": {
                    "type": "boolean"
                },
                "max_balance": {
                    "type": "number"
                },
                "min_balance": {
                    "type": "number"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "balance",
                        "locked"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "token": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.tokenJson": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "currency_id": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "extends": {
                    "$ref": "#/definitions/internal_server_http.tokenExtendsJson"
                },
                "is_native": {
                    "type": "boolean"
                },
                "metadata": {},
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.tokenNativeParam": {
            "type": "object",
            "properties": {
                "include_extends": {
                    "type": "boolean"
                }
            }
        },
        "internal_server_http.tokensSearchParam": {
            "type": "object",
            "properties": {
                "include_extends": {
                    "type": "boolean"
                },
                "unique_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.tokensV2Param": {
            "type": "object",
            "properties": {
                "include_extends": {
                    "type": "boolean"
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "provider": {
                    "type": "string"
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.transfersParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "after_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "asset_symbol": {
                    "type": "string"
                },
                "asset_unique_id": {
                    "type": "string"
                },
                "block_range": {
                    "type": "string"
                },
                "currency": {
                    "type": "string",
                    "enum": [
                        "token",
                        "usd"
                    ]
                },
                "direction": {
                    "type": "string",
                    "enum": [
                        "all",
                        "sent",
                        "received"
                    ]
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "filter_nft": {
                    "description": "filter nft transfer, support uniques module and enjin multi-token",
                    "type": "boolean"
                },
                "include_total": {
                    "type": "boolean"
                },
                "item_id": {
                    "type": "integer"
                },
                "max_amount": {
                    "type": "string"
                },
                "min_amount": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "success": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer"
                },
                "token_category": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_server_http.treasuryProposalParams": {
            "type": "object",
            "properties": {
                "proposal_id": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "internal_server_http.treasuryProposalsParams": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.treasuryTipParams": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.treasuryTipperParams": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.treasuryTipsParams": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                }
            }
        },
        "internal_server_http.unbondingParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.validatorParams": {
            "type": "object",
            "required": [
                "stash"
            ],
            "properties": {
                "stash": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.validatorsParams": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "rank_validator",
                        "bonded_nominators",
                        "bonded_owner",
                        "count_nominators",
                        "validator_prefs_value",
                        "bonded_total"
                    ]
                },
                "page": {
                    "description": "Page number, starting from 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "row": {
                    "description": "Data size per page",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0,
                    "example": 10
                }
            }
        },
        "internal_server_http.vestingReleaseParams": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "end": {
                    "type": "string",
                    "example": "2023-06-01"
                },
                "start": {
                    "type": "string",
                    "example": "2023-05-01"
                }
            }
        },
        "internal_server_http.votedParams": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "internal_server_http.waitingValidatorsParams": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "enum": [
                        "desc",
                        "asc"
                    ]
                },
                "order_field": {
                    "type": "string",
                    "enum": [
                        "bonded_nominators",
                        "bonded_owner",
                        "count_nominators",
                        "validator_prefs_value"
                    ]
                }
            }
        },
        "internal_server_http.winnerPredictParams": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_dao.AccountBalanceValueHistory": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.AccountAssetsCountJson": {
            "type": "object",
            "properties": {
                "account_count": {
                    "type": "integer"
                },
                "max_balance": {
                    "type": "number"
                },
                "min_balance": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.AccountBalanceDetailJson": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "address": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.AccountContributedJson": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "contributed": {
                    "type": "number"
                },
                "event_index": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "fund_auction_status": {
                    "type": "integer"
                },
                "fund_event_index": {
                    "type": "string"
                },
                "fund_id": {
                    "type": "string"
                },
                "fund_status": {
                    "type": "integer"
                },
                "memo": {
                    "type": "string"
                },
                "para_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "unlocking_block": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.AccountDerive": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "bonded": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "locked": {
                    "type": "number"
                },
                "reserved": {
                    "type": "number"
                },
                "token": {
                    "type": "string"
                },
                "unbonding": {
                    "type": "number"
                },
                "unique_id": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.AccountDisplay": {
            "type": "object",
            "properties": {
                "account_index": {
                    "type": "string"
                },
                "address": {
                    "description": "Current network account",
                    "type": "string"
                },
                "display": {
                    "type": "string"
                },
                "evm_contract": {
                    "$ref": "#/definitions/subscan_internal_model.EvmAccountDisplay"
                },
                "identity": {
                    "type": "boolean"
                },
                "judgements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.RegistrationJudgementJson"
                    }
                },
                "merkle": {
                    "$ref": "#/definitions/subscan_internal_model.MerkleTag"
                },
                "parent": {
                    "description": "Parent account",
                    "allOf": [
                        {
                            "$ref": "#/definitions/subscan_internal_model.AccountParentJson"
                        }
                    ]
                }
            }
        },
        "subscan_internal_model.AccountEventJson": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "event_id": {
                    "type": "string"
                },
                "event_idx": {
                    "type": "integer"
                },
                "event_index": {
                    "type": "string"
                },
                "event_method": {
                    "type": "string"
                },
                "extrinsic_hash": {
                    "type": "string"
                },
                "extrinsic_idx": {
                    "type": "integer"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "module_id": {
                    "type": "string"
                },
                "params": {
                    "type": "string"
                },
                "stash": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.AccountNominateList": {
            "type": "object",
            "properties": {
                "bonded": {
                    "type": "number"
                },
                "bonded_nominators": {
                    "type": "number"
                },
                "bonded_owner": {
                    "type": "number"
                },
                "bonded_total": {
                    "type": "number"
                },
                "controller_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "count_nominators": {
                    "type": "integer"
                },
                "grandpa_vote": {
                    "type": "integer"
                },
                "latest_mining": {
                    "type": "integer"
                },
                "rank_validator": {
                    "type": "integer"
                },
                "reward_point": {
                    "type": "integer"
                },
                "session_key": {
                    "$ref": "#/definitions/subscan_internal_model.SessionKeys"
                },
                "staking_rewards_tag": {
                    "$ref": "#/definitions/subscan_libs_stakingrewards.Provider"
                },
                "stash_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "status": {
                    "type": "string"
                },
                "validator_prefs_value": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.AccountParentJson": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "display": {
                    "type": "string"
                },
                "identity": {
                    "type": "boolean"
                },
                "sub_symbol": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.AccountReferendumJson": {
            "type": "object",
            "properties": {
                "conviction": {
                    "type": "number"
                },
                "referendum_index": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.AccountResourceCountJson": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "resource": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.AccountRoleCountJson": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.AccountSampleJson": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "address": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "balance_lock": {
                    "type": "number"
                },
                "count_extrinsic": {
                    "type": "integer"
                },
                "derive_token": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/subscan_internal_model.AccountDerive"
                    }
                },
                "evm_account": {
                    "type": "string"
                },
                "fellowship_rank": {
                    "type": "integer"
                },
                "is_evm_contract": {
                    "type": "boolean"
                },
                "registrar_info": {
                    "$ref": "#/definitions/subscan_internal_model.RoleRegistrarJson"
                },
                "ring_lock": {
                    "type": "number"
                },
                "substrate_account": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                }
            }
        },
        "subscan_internal_model.AssetsJson": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "number"
                },
                "balance": {
                    "type": "number"
                },
                "bonded": {
                    "type": "number"
                },
                "category": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "conviction_lock": {
                    "type": "number"
                },
                "currency_id": {
                    "type": "string"
                },
                "decimal": {
                    "type": "integer"
                },
                "democracy_lock": {
                    "type": "number"
                },
                "election_lock": {
                    "type": "number"
                },
                "locked": {
                    "type": "number"
                },
                "network": {
                    "type": "string"
                },
                "nomination_bonded": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                },
                "reserved": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "token_unique_id": {
                    "type": "string"
                },
                "unbonding": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.BlockHeader": {
            "type": "object",
            "properties": {
                "block_number": {
                    "type": "integer"
                },
                "digest": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extrinsics_root": {
                    "type": "string"
                },
                "parent_hash": {
                    "type": "string"
                },
                "state_root": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.BountyJson": {
            "type": "object",
            "properties": {
                "beneficiary": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "bond": {
                    "type": "number"
                },
                "created_block": {
                    "type": "integer"
                },
                "curator": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "curator_deposit": {
                    "type": "number"
                },
                "curator_fee": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "expire_block": {
                    "type": "integer"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "proposer": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "status": {
                    "type": "string"
                },
                "timeline": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TimelineJson"
                    }
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.BountySampleJson": {
            "type": "object",
            "properties": {
                "block_timestamp": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "proposer": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "status": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.ChainBlockJson": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "event_count": {
                    "type": "integer"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ChainEventJson"
                    }
                },
                "extrinsics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ChainExtrinsicJson"
                    }
                },
                "extrinsics_count": {
                    "type": "integer"
                },
                "extrinsics_root": {
                    "type": "string"
                },
                "finalized": {
                    "type": "boolean"
                },
                "hash": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ChainLogJson"
                    }
                },
                "parent_hash": {
                    "type": "string"
                },
                "spec_version": {
                    "type": "integer"
                },
                "state_root": {
                    "type": "string"
                },
                "validator": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.ChainEvent": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer"
                },
                "es_params": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "event_id": {
                    "type": "string"
                },
                "event_idx": {
                    "type": "integer"
                },
                "event_index": {
                    "type": "string"
                },
                "extrinsic_hash": {
                    "type": "string"
                },
                "extrinsic_idx": {
                    "type": "integer"
                },
                "extrinsic_module": {
                    "type": "string"
                },
                "finalized": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "module_id": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.EventParam"
                    }
                },
                "phase": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ChainEventJson": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "event_id": {
                    "type": "string"
                },
                "event_idx": {
                    "type": "integer"
                },
                "event_index": {
                    "type": "string"
                },
                "extrinsic_hash": {
                    "type": "string"
                },
                "extrinsic_idx": {
                    "type": "integer"
                },
                "finalized": {
                    "type": "boolean"
                },
                "module_id": {
                    "type": "string"
                },
                "params": {
                    "type": "string"
                },
                "phase": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ChainEventParams": {
            "type": "object",
            "properties": {
                "event_index": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.EventParam"
                    }
                }
            }
        },
        "subscan_internal_model.ChainEventV2Json": {
            "type": "object",
            "properties": {
                "block_timestamp": {
                    "type": "integer"
                },
                "event_id": {
                    "type": "string"
                },
                "event_index": {
                    "type": "string"
                },
                "extrinsic_hash": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "finalized": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "module_id": {
                    "type": "string"
                },
                "phase": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ChainExtrinsicJson": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "account_id": {
                    "type": "string"
                },
                "account_index": {
                    "type": "string"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "call_module": {
                    "type": "string"
                },
                "call_module_function": {
                    "type": "string"
                },
                "extrinsic_hash": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "fee": {
                    "type": "number"
                },
                "fee_used": {
                    "type": "number"
                },
                "finalized": {
                    "type": "boolean"
                },
                "from_hex": {
                    "type": "string"
                },
                "nonce": {
                    "type": "integer"
                },
                "params": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "subscan_internal_model.ChainExtrinsicParams": {
            "type": "object",
            "properties": {
                "extrinsic_index": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ExtrinsicParam"
                    }
                }
            }
        },
        "subscan_internal_model.ChainExtrinsicV2Json": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "call_module": {
                    "type": "string"
                },
                "call_module_function": {
                    "type": "string"
                },
                "extrinsic_hash": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "fee": {
                    "type": "number"
                },
                "fee_used": {
                    "type": "number"
                },
                "finalized": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "nonce": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                },
                "tip": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.ChainLogJson": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "log_index": {
                    "type": "string"
                },
                "log_type": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.ContractAccountListJson": {
            "type": "object",
            "properties": {
                "balance": {
                    "$ref": "#/definitions/subscan_internal_types.Balance"
                },
                "contract_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "owner_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "transaction_count": {
                    "type": "integer"
                },
                "verify_time": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ContractAction": {
            "type": "string",
            "enum": [
                "Instantiated",
                "Terminated",
                "ContractCodeUpdated"
            ],
            "x-enum-varnames": [
                "ContractInstantiated",
                "ContractTerminated",
                "ContractCodeUpdated"
            ]
        },
        "subscan_internal_model.ContractEventJson": {
            "type": "object",
            "properties": {
                "block_timestamp": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "event_index": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.ContractTimeline": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/subscan_internal_model.ContractAction"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "event_index": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.ContractTransactionListJson": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "contract_address": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "subscan_internal_model.ConvictionVoteJson": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "amount": {
                    "type": "number"
                },
                "conviction": {
                    "type": "number"
                },
                "delegate_account": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "referendum_index": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "unlock_block": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                },
                "votes": {
                    "type": "number"
                },
                "voting_time": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.CouncilJson": {
            "type": "object",
            "properties": {
                "aye_votes": {
                    "type": "integer"
                },
                "created_block": {
                    "type": "integer"
                },
                "member_count": {
                    "type": "integer"
                },
                "nay_votes": {
                    "type": "integer"
                },
                "proposal_hash": {
                    "type": "string"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "proposer": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "status": {
                    "type": "string"
                },
                "updated_block": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.CouncilProposalJson": {
            "type": "object",
            "properties": {
                "aye_votes": {
                    "type": "integer"
                },
                "call_module": {
                    "type": "string"
                },
                "call_name": {
                    "type": "string"
                },
                "created_block": {
                    "type": "integer"
                },
                "executed_success": {
                    "type": "boolean"
                },
                "member_count": {
                    "type": "integer"
                },
                "nay_votes": {
                    "type": "integer"
                },
                "params": {
                    "type": "string"
                },
                "pre_image": {
                    "$ref": "#/definitions/subscan_internal_model.PreImageJson"
                },
                "proposal_hash": {
                    "type": "string"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "proposer": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "status": {
                    "type": "string"
                },
                "timeline": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TimelineJson"
                    }
                },
                "updated_block": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.CouncilVoteJson"
                    }
                }
            }
        },
        "subscan_internal_model.CouncilVoteJson": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "extrinsic_hash": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "passed": {
                    "type": "boolean"
                },
                "voting_time": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.DProgress": {
            "type": "object",
            "properties": {
                "download": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "progress": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.DailyStaticJson": {
            "type": "object",
            "properties": {
                "balance_amount_total": {
                    "type": "number"
                },
                "time_hour_utc": {
                    "type": "string"
                },
                "time_six_hour_utc": {
                    "type": "string"
                },
                "time_utc": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "transfer_amount_total": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.DailyStaticJsonV2": {
            "type": "object",
            "properties": {
                "time_utc": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                },
                "transfer_amount": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.DailyTokenStatusJson": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "number"
                },
                "other": {
                    "type": "number"
                },
                "other_details": {
                    "$ref": "#/definitions/subscan_internal_model.OtherDetail"
                },
                "staking": {
                    "type": "number"
                },
                "system_accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.AccountBalanceDetailJson"
                    }
                },
                "time_utc": {
                    "type": "string"
                },
                "total_issuance": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.DemocracyJson": {
            "type": "object",
            "properties": {
                "call_module": {
                    "type": "string"
                },
                "call_name": {
                    "type": "string"
                },
                "created_block": {
                    "type": "integer"
                },
                "params": {
                    "type": "string"
                },
                "pre_image": {
                    "$ref": "#/definitions/subscan_internal_model.PreImageJson"
                },
                "proposal_hash": {
                    "type": "string"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "seconded_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "timeline": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TimelineJson"
                    }
                },
                "updated_block": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.DemocracyProposalSeconded": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_num": {
                    "type": "integer"
                },
                "event_index": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "proposal_id": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.DemocracyReferendumSampleJson": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "call_module": {
                    "type": "string"
                },
                "call_name": {
                    "type": "string"
                },
                "created_block": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "referendum_index": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "vote_threshold": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.DemocracySampleJson": {
            "type": "object",
            "properties": {
                "block_timestamp": {
                    "type": "integer"
                },
                "call_module": {
                    "type": "string"
                },
                "call_name": {
                    "type": "string"
                },
                "created_block": {
                    "type": "integer"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "seconded_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.DemocracyVoteJson": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "amount": {
                    "type": "number"
                },
                "conviction": {
                    "type": "number"
                },
                "delegate_account": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "passed": {
                    "type": "boolean"
                },
                "referendum_index": {
                    "type": "integer"
                },
                "unlock_block": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                },
                "votes": {
                    "type": "number"
                },
                "voting_time": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.EraBondStat": {
            "type": "object",
            "properties": {
                "avg": {
                    "type": "number"
                },
                "era": {
                    "type": "integer"
                },
                "owner": {
                    "type": "number"
                },
                "total_avg": {
                    "type": "number"
                },
                "total_bond": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.EventParam": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "type_name": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "subscan_internal_model.EvmAccountDisplay": {
            "type": "object",
            "properties": {
                "contract_name": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.ExtrinsicDetail": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "account_id": {
                    "type": "string"
                },
                "block_hash": {
                    "type": "string"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "call_module": {
                    "type": "string"
                },
                "call_module_function": {
                    "type": "string"
                },
                "error": {
                    "$ref": "#/definitions/subscan_internal_model.ExtrinsicError"
                },
                "event": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ChainEventJson"
                    }
                },
                "event_count": {
                    "type": "integer"
                },
                "extrinsic_hash": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "fee": {
                    "type": "number"
                },
                "fee_used": {
                    "type": "number"
                },
                "finalized": {
                    "type": "boolean"
                },
                "lifetime": {
                    "$ref": "#/definitions/subscan_internal_model.Lifetime"
                },
                "multisig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.MultisigJson"
                    }
                },
                "nonce": {
                    "type": "integer"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ExtrinsicParam"
                    }
                },
                "pending": {
                    "type": "boolean"
                },
                "proxy": {
                    "$ref": "#/definitions/subscan_internal_model.ExtrinsicProxyDetail"
                },
                "signature": {
                    "type": "string"
                },
                "sub_calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ExtrinsicSubCallJson"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "tip": {
                    "type": "number"
                },
                "transfer": {
                    "$ref": "#/definitions/subscan_internal_model.TransferJson"
                }
            }
        },
        "subscan_internal_model.ExtrinsicError": {
            "type": "object",
            "properties": {
                "batch_index": {
                    "type": "integer"
                },
                "doc": {
                    "type": "string"
                },
                "module": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.ExtrinsicParam": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "type_name": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "subscan_internal_model.ExtrinsicProxyDetail": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "call_module": {
                    "type": "string"
                },
                "call_module_function": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ExtrinsicParam"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "subscan_internal_model.ExtrinsicSubCallJson": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "exec_result": {
                    "$ref": "#/definitions/subscan_libs_substrate.MetadataModuleError"
                },
                "exec_status": {
                    "type": "string"
                },
                "module": {
                    "type": "string"
                },
                "multisig": {
                    "$ref": "#/definitions/subscan_internal_model.MultisigJson"
                },
                "name": {
                    "type": "string"
                },
                "param": {},
                "sub_calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ExtrinsicSubCallJson"
                    }
                }
            }
        },
        "subscan_internal_model.FellowshipReferendumStatisticsJson": {
            "type": "object",
            "properties": {
                "active_fellowship_members": {
                    "type": "integer"
                },
                "confirm_total": {
                    "type": "integer"
                },
                "fellowship_members": {
                    "type": "integer"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ReferendumStatisticsOriginsJson"
                    }
                },
                "originsCount": {
                    "type": "integer"
                },
                "voting_total": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.IdentityJson": {
            "type": "object",
            "properties": {
                "display": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "identity": {
                    "type": "boolean"
                },
                "judgements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.RegistrationJudgementJson"
                    }
                },
                "legal": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "parent": {
                    "$ref": "#/definitions/subscan_internal_model.AccountParentJson"
                },
                "riot": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "web": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.ItemDetail": {
            "type": "object",
            "properties": {
                "fallback_image": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.MetadataMedia"
                    }
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.Lifetime": {
            "type": "object",
            "properties": {
                "birth": {
                    "type": "integer"
                },
                "death": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.LinearVestingSchedule": {
            "type": "object",
            "properties": {
                "balance": {
                    "$ref": "#/definitions/subscan_internal_types.Balance"
                },
                "cliff": {
                    "type": "integer"
                },
                "vesting": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.MerkleTag": {
            "type": "object",
            "properties": {
                "address_type": {
                    "type": "string"
                },
                "tag_name": {
                    "type": "string"
                },
                "tag_subtype": {
                    "type": "string"
                },
                "tag_type": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.MetadataMedia": {
            "type": "object",
            "properties": {
                "types": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.MetadataSample": {
            "type": "object",
            "properties": {
                "fallback_image": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.MetadataMedia"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.MultiAction": {
            "type": "string",
            "enum": [
                "Approval",
                "Executed",
                "Cancelled",
                "Failed"
            ],
            "x-enum-varnames": [
                "MultiActionApproval",
                "MultiActionExecuted",
                "MultiActionCancelled",
                "MultiActionExecuteFailed"
            ]
        },
        "subscan_internal_model.MultisigExtrinsicDetailsJson": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "approve_record": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.MultisigProcessJson"
                    }
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "call_data": {
                    "type": "string"
                },
                "call_hash": {
                    "type": "string"
                },
                "call_module": {
                    "type": "string"
                },
                "call_module_function": {
                    "type": "string"
                },
                "cancel_extrinsic_idx": {
                    "type": "string"
                },
                "cancel_record": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.MultisigProcessJson"
                    }
                },
                "confirm_extrinsic_idx": {
                    "type": "string"
                },
                "multi_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "multi_id": {
                    "description": "extrinsicIndex",
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ExtrinsicParam"
                    }
                },
                "process": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.MultisigProcessJson"
                    }
                },
                "status": {
                    "$ref": "#/definitions/subscan_internal_model.MultiAction"
                },
                "sub_calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ExtrinsicSubCallJson"
                    }
                },
                "threshold": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.MultisigExtrinsicJson": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "call_data": {
                    "type": "string"
                },
                "call_hash": {
                    "type": "string"
                },
                "call_module": {
                    "type": "string"
                },
                "call_module_function": {
                    "type": "string"
                },
                "multi_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "multi_id": {
                    "description": "extrinsicIndex",
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ExtrinsicParam"
                    }
                },
                "process": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.MultisigProcessJson"
                    }
                },
                "status": {
                    "$ref": "#/definitions/subscan_internal_model.MultiAction"
                },
                "sub_calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ExtrinsicSubCallJson"
                    }
                },
                "threshold": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.MultisigJson": {
            "type": "object",
            "properties": {
                "call_hash": {
                    "type": "string"
                },
                "call_module": {
                    "type": "string"
                },
                "call_module_function": {
                    "type": "string"
                },
                "multi_id": {
                    "type": "string"
                },
                "multisig_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "multisig_status": {
                    "$ref": "#/definitions/subscan_internal_model.MultiAction"
                },
                "processing": {
                    "type": "integer"
                },
                "threshold": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.MultisigProcessJson": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "approve_type": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/subscan_internal_model.MultiAction"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.NominatorDetail": {
            "type": "object",
            "properties": {
                "bonded": {
                    "type": "number"
                },
                "nominator_stash": {
                    "type": "string"
                },
                "staking_info": {
                    "$ref": "#/definitions/subscan_internal_model.StakingAccount"
                },
                "stash_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.NominatorJson": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "bonded": {
                    "type": "number"
                },
                "nominator_stash": {
                    "type": "string"
                },
                "rank_nominator": {
                    "type": "integer"
                },
                "validator_stash": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.OrmlVestingSchedule": {
            "type": "object",
            "properties": {
                "per_period": {
                    "$ref": "#/definitions/subscan_internal_types.Balance"
                },
                "period": {
                    "type": "integer"
                },
                "period_count": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.OtherDetail": {
            "type": "object",
            "properties": {
                "democracy_locked_balance": {
                    "type": "number"
                },
                "election_locked_balance": {
                    "type": "number"
                },
                "nominator_bonded": {
                    "type": "number"
                },
                "reserved_balance": {
                    "type": "number"
                },
                "unbonded_locked_balance": {
                    "type": "number"
                },
                "validator_bonded": {
                    "type": "number"
                },
                "vesting_balance": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.PalletVestingSchedule": {
            "type": "object",
            "properties": {
                "locked": {
                    "$ref": "#/definitions/subscan_internal_types.Balance"
                },
                "per_block": {
                    "$ref": "#/definitions/subscan_internal_types.Balance"
                },
                "starting_block": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ParaChainMetaJson": {
            "type": "object",
            "properties": {
                "auction_active": {
                    "type": "boolean"
                },
                "auction_count": {
                    "type": "integer"
                },
                "ending_period": {
                    "type": "integer"
                },
                "lease_offset": {
                    "type": "integer"
                },
                "lease_period": {
                    "type": "integer"
                },
                "lease_periods_per_slot": {
                    "type": "integer"
                },
                "online_count": {
                    "type": "integer"
                },
                "retirement_period": {
                    "type": "integer"
                },
                "total_slot_num": {
                    "type": "integer"
                },
                "upcoming_count": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ParaChainSample": {
            "type": "object",
            "properties": {
                "begin_period": {
                    "type": "integer"
                },
                "bid_id": {
                    "type": "string"
                },
                "first_period": {
                    "type": "integer"
                },
                "fund_id": {
                    "type": "string"
                },
                "last_period": {
                    "type": "integer"
                },
                "manager_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "open_channel_count": {
                    "type": "integer"
                },
                "para_id": {
                    "type": "integer"
                },
                "reserved_extrinsic_index": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "xcm_receive_message_count": {
                    "type": "integer"
                },
                "xcm_receive_transfer_count": {
                    "type": "integer"
                },
                "xcm_send_message_count": {
                    "type": "integer"
                },
                "xcm_send_transfer_count": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ParachainAuction": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                },
                "early_end_block": {
                    "type": "integer"
                },
                "end_block": {
                    "type": "integer"
                },
                "extinguish_block": {
                    "type": "integer"
                },
                "lease_index": {
                    "type": "integer"
                },
                "start_block": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "winners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ParachainSlotWinner"
                    }
                }
            }
        },
        "subscan_internal_model.ParachainFund": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                },
                "balance": {
                    "type": "number"
                },
                "bid_id": {
                    "type": "string"
                },
                "cap": {
                    "type": "number"
                },
                "contributors": {
                    "type": "integer"
                },
                "end_block": {
                    "type": "integer"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "first_period": {
                    "type": "integer"
                },
                "fund_auction_status": {
                    "type": "integer"
                },
                "fund_id": {
                    "type": "string"
                },
                "in_auctions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "last_change_block": {
                    "type": "integer"
                },
                "last_change_event_idx": {
                    "type": "integer"
                },
                "last_change_timestamp": {
                    "type": "integer"
                },
                "last_period": {
                    "type": "integer"
                },
                "owner": {
                    "type": "string"
                },
                "owner_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "para_id": {
                    "type": "integer"
                },
                "raised": {
                    "type": "number"
                },
                "start_block": {
                    "type": "integer"
                },
                "start_block_at": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ParachainFundContribution": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "contributed": {
                    "description": "total amount",
                    "type": "number"
                },
                "contributing": {
                    "description": "last contributed amount",
                    "type": "number"
                },
                "event_index": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "fund_id": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "para_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "who": {
                    "type": "string"
                },
                "who_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                }
            }
        },
        "subscan_internal_model.ParachainFundHistoryStatJson": {
            "type": "object",
            "properties": {
                "time_hour_utc": {
                    "type": "string"
                },
                "time_six_hour_utc": {
                    "type": "string"
                },
                "time_utc": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.ParachainInfoJson": {
            "type": "object",
            "properties": {
                "auction_index": {
                    "type": "integer"
                },
                "begin_period": {
                    "description": "周期开始时间(begin-first-end)",
                    "type": "integer"
                },
                "bid_id": {
                    "type": "string"
                },
                "deposit": {
                    "type": "number"
                },
                "first_period": {
                    "type": "integer"
                },
                "fund_account": {
                    "type": "string"
                },
                "fund_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "fund_id": {
                    "type": "string"
                },
                "genesis_head": {
                    "type": "string"
                },
                "last_period": {
                    "type": "integer"
                },
                "manager": {
                    "type": "string"
                },
                "manager_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "open_channel_count": {
                    "type": "integer"
                },
                "para_id": {
                    "type": "integer"
                },
                "reserved_extrinsic_index": {
                    "type": "string"
                },
                "source": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "validation_code_url": {
                    "type": "string"
                },
                "validators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "validators_display": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                    }
                },
                "xcm_receive_message_count": {
                    "type": "integer"
                },
                "xcm_receive_transfer_count": {
                    "type": "integer"
                },
                "xcm_send_message_count": {
                    "type": "integer"
                },
                "xcm_send_transfer_count": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ParachainSlotWinner": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "auction_index": {
                    "type": "integer"
                },
                "bid_count": {
                    "type": "integer"
                },
                "bid_id": {
                    "type": "string"
                },
                "bidder_account": {
                    "type": "string"
                },
                "bidder_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "event_index": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "first_period": {
                    "type": "integer"
                },
                "fund_id": {
                    "type": "string"
                },
                "last_period": {
                    "type": "integer"
                },
                "para_id": {
                    "type": "integer"
                },
                "source": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.PreImageJson": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "author": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "call_module": {
                    "type": "string"
                },
                "call_name": {
                    "type": "string"
                },
                "created_block": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "params": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_block": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.PreimageJson": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "author": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "call_module": {
                    "type": "string"
                },
                "call_name": {
                    "type": "string"
                },
                "create_timestamp": {
                    "type": "integer"
                },
                "created_block": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "len": {
                    "type": "integer"
                },
                "link": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.PreimageLinkJson"
                    }
                },
                "params": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_block": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.PreimageLinkJson": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "module": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.PreimageSampleJson": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "call_module": {
                    "type": "string"
                },
                "call_name": {
                    "type": "string"
                },
                "created_block": {
                    "type": "integer"
                },
                "created_timestamp": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "link": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.PreimageLinkJson"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.ProxyChainExtrinsicJson": {
            "type": "object",
            "properties": {
                "account_display": {
                    "description": "Execution account",
                    "allOf": [
                        {
                            "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                        }
                    ]
                },
                "block_num": {
                    "type": "integer",
                    "example": 12413008
                },
                "block_timestamp": {
                    "type": "integer",
                    "example": 1681965624
                },
                "call_module": {
                    "type": "string",
                    "example": "proxy"
                },
                "call_module_function": {
                    "type": "string",
                    "example": "proxy"
                },
                "extrinsic_hash": {
                    "type": "string",
                    "example": "0xb3c16a3872a2d986cabd6ccfbcb387e922c0e16d3e3d5ed128fc7b6660e219d1"
                },
                "extrinsic_index": {
                    "type": "string",
                    "example": "12413008-1"
                },
                "fee": {
                    "description": "Estimated handling fee",
                    "type": "number",
                    "example": 10000
                },
                "fee_used": {
                    "description": "Actual handling fee",
                    "type": "number",
                    "example": 10000
                },
                "finalized": {
                    "type": "boolean",
                    "example": true
                },
                "nonce": {
                    "type": "integer",
                    "example": 1
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ExtrinsicParam"
                    }
                },
                "real_account_display": {
                    "description": "Entrusted account",
                    "allOf": [
                        {
                            "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                        }
                    ]
                },
                "signature": {
                    "type": "string",
                    "example": "b80d3b8a51ff541b17239ce50c6048c23824a0c7ef8c7e0a7957e68785bc9e4dd521e8ec604c184f26b0dd2ddaa0722bf39bdb7ed4cab5f1906ebfbbd76b5681"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "subscan_internal_model.ReferendumJson": {
            "type": "object",
            "properties": {
                "aye_amount": {
                    "type": "number"
                },
                "aye_without_conviction": {
                    "type": "number"
                },
                "created_block": {
                    "type": "integer"
                },
                "delay": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "executed_success": {
                    "type": "boolean"
                },
                "nay_amount": {
                    "type": "number"
                },
                "nay_without_conviction": {
                    "type": "number"
                },
                "pre_image": {
                    "$ref": "#/definitions/subscan_internal_model.PreImageJson"
                },
                "referendum_index": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "timeline": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TimelineJson"
                    }
                },
                "turnout": {
                    "type": "number"
                },
                "updated_block": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                },
                "vote_threshold": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.ReferendumStatisticsJson": {
            "type": "object",
            "properties": {
                "confirm_total": {
                    "type": "integer"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.ReferendumStatisticsOriginsJson"
                    }
                },
                "originsCount": {
                    "type": "integer"
                },
                "referendum_locked": {
                    "type": "number"
                },
                "referendum_participate": {
                    "type": "number"
                },
                "voting_total": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ReferendumStatisticsOriginsJson": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "origins": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.ReferendumV2Json": {
            "type": "object",
            "properties": {
                "abstains_count": {
                    "type": "integer"
                },
                "account": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "ayes_amount": {
                    "type": "number"
                },
                "ayes_count": {
                    "type": "integer"
                },
                "bare_ayes": {
                    "type": "number"
                },
                "beneficiary": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "beneficiary_amount": {
                    "type": "number"
                },
                "created_block": {
                    "type": "integer"
                },
                "created_block_timestamp": {
                    "type": "integer"
                },
                "decision_deposit_account": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "decision_deposit_balance": {
                    "type": "number"
                },
                "deposit_balance": {
                    "type": "number"
                },
                "latest_block_num": {
                    "type": "integer"
                },
                "latest_block_timestamp": {
                    "type": "integer"
                },
                "nays_amount": {
                    "type": "number"
                },
                "nays_count": {
                    "type": "integer"
                },
                "origins": {
                    "type": "string"
                },
                "origins_id": {
                    "type": "integer"
                },
                "pre_image": {
                    "$ref": "#/definitions/subscan_internal_model.PreImageJson"
                },
                "referendum_index": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "support_amount": {
                    "type": "number"
                },
                "timeline": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TimelineJson"
                    }
                }
            }
        },
        "subscan_internal_model.ReferendumV2SampleJson": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "call_module": {
                    "type": "string"
                },
                "call_name": {
                    "type": "string"
                },
                "created_block": {
                    "type": "integer"
                },
                "created_block_timestamp": {
                    "type": "integer"
                },
                "latest_block_num": {
                    "type": "integer"
                },
                "latest_block_timestamp": {
                    "type": "integer"
                },
                "origins": {
                    "type": "string"
                },
                "origins_id": {
                    "type": "integer"
                },
                "referendum_index": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.RegistrationJudgementJson": {
            "type": "object",
            "properties": {
                "index": {
                    "type": "integer"
                },
                "judgement": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.RoleRegistrarJson": {
            "type": "object",
            "properties": {
                "registrar_fee": {
                    "type": "number"
                },
                "registrar_index": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.RuntimeVersion": {
            "type": "object",
            "properties": {
                "modules": {
                    "type": "string"
                },
                "spec_version": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.SampleBlockV2Json": {
            "type": "object",
            "properties": {
                "account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "event_count": {
                    "type": "integer"
                },
                "extrinsics_count": {
                    "type": "integer"
                },
                "finalized": {
                    "type": "boolean"
                },
                "hash": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.SessionKeys": {
            "type": "object",
            "properties": {
                "authority_discovery": {
                    "type": "string"
                },
                "babe": {
                    "type": "string"
                },
                "grandpa": {
                    "type": "string"
                },
                "im_online": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.StakingAccount": {
            "type": "object",
            "properties": {
                "controller": {
                    "type": "string"
                },
                "controller_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "reward_account": {
                    "type": "string"
                },
                "reward_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                }
            }
        },
        "subscan_internal_model.StakingAccountEvent": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "era": {
                    "type": "integer"
                },
                "event_id": {
                    "type": "string"
                },
                "event_index": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "invalid_era": {
                    "type": "boolean"
                },
                "module_id": {
                    "type": "string"
                },
                "stash": {
                    "type": "string"
                },
                "validator_stash": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.StandardMetadata": {
            "type": "object",
            "properties": {
                "attributes": {},
                "description": {
                    "type": "string",
                    "example": "Thanks"
                },
                "external_url": {
                    "type": "string",
                    "example": "https://beta.nft.io/my-collections"
                },
                "fallback_image": {
                    "type": "string"
                },
                "image": {
                    "type": "string",
                    "example": "https://ipfs.io/ipfs/bafkreihmb2esqysriq46l2uutyu2bqxkzlgluarbr36kom3hrykd2ku42u"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.MetadataMedia"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "500 Followers"
                }
            }
        },
        "subscan_internal_model.TechcommProposalJson": {
            "type": "object",
            "properties": {
                "aye_votes": {
                    "type": "integer"
                },
                "call_module": {
                    "type": "string"
                },
                "call_name": {
                    "type": "string"
                },
                "created_block": {
                    "type": "integer"
                },
                "executed_success": {
                    "type": "boolean"
                },
                "member_count": {
                    "type": "integer"
                },
                "nay_votes": {
                    "type": "integer"
                },
                "params": {
                    "type": "string"
                },
                "pre_image": {
                    "$ref": "#/definitions/subscan_internal_model.PreImageJson"
                },
                "proposal_hash": {
                    "type": "string"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "proposer": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "status": {
                    "type": "string"
                },
                "timeline": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TimelineJson"
                    }
                },
                "updated_block": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TechcommVoteJson"
                    }
                }
            }
        },
        "subscan_internal_model.TechcommProposalSample": {
            "type": "object",
            "properties": {
                "aye_votes": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "call_module": {
                    "type": "string"
                },
                "call_name": {
                    "type": "string"
                },
                "created_block": {
                    "type": "integer"
                },
                "member_count": {
                    "type": "integer"
                },
                "nay_votes": {
                    "type": "integer"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.TechcommVoteJson": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "extrinsic_hash": {
                    "type": "string"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "passed": {
                    "type": "boolean"
                },
                "voting_time": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.TimelineJson": {
            "type": "object",
            "properties": {
                "block": {
                    "type": "integer"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "params": {},
                "prophecy": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.TokenJson": {
            "type": "object",
            "properties": {
                "alias_name": {
                    "type": "string"
                },
                "asset_id": {
                    "type": "number"
                },
                "balance": {
                    "type": "number"
                },
                "bonded": {
                    "type": "number"
                },
                "contract": {
                    "type": "string"
                },
                "conviction_lock": {
                    "type": "number"
                },
                "currency_id": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "democracy_lock": {
                    "type": "number"
                },
                "election_lock": {
                    "type": "number"
                },
                "lock": {
                    "type": "number"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.MetadataMedia"
                    }
                },
                "reserved": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "token_image": {
                    "description": "TokenId        *decimal.Decimal `json:\"token_id,omitempty\"`",
                    "type": "string"
                },
                "unbonding": {
                    "type": "number"
                },
                "unique_id": {
                    "type": "string"
                },
                "vesting": {
                    "$ref": "#/definitions/subscan_internal_model.VestingJson"
                }
            }
        },
        "subscan_internal_model.TransferHistory": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "amount_v2": {
                    "type": "number"
                },
                "asset_symbol": {
                    "type": "string"
                },
                "asset_type": {
                    "description": "AssetType asset type,default empty.",
                    "type": "string"
                },
                "asset_unique_id": {
                    "type": "string"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "event_idx": {
                    "type": "integer"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "fee": {
                    "type": "number"
                },
                "from": {
                    "type": "string"
                },
                "from_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "hash": {
                    "type": "string"
                },
                "item_detail": {
                    "$ref": "#/definitions/subscan_internal_model.ItemDetail"
                },
                "item_id": {
                    "type": "number"
                },
                "module": {
                    "type": "string"
                },
                "nonce": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                },
                "to": {
                    "type": "string"
                },
                "to_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "usd_amount": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.TransferHistoryTokensTotal": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/subscan_internal_model.TransferHistoryTotal"
            }
        },
        "subscan_internal_model.TransferHistoryTotal": {
            "type": "object",
            "properties": {
                "received": {
                    "type": "number"
                },
                "sent": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_model.TransferJson": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "asset_symbol": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "module": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "to": {
                    "type": "string"
                },
                "to_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                }
            }
        },
        "subscan_internal_model.TreasuryProposalDetailJson": {
            "type": "object",
            "properties": {
                "beneficiary": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "council": {
                    "$ref": "#/definitions/subscan_internal_model.CouncilJson"
                },
                "created_block": {
                    "type": "integer"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "proposer": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "reward": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "timeline": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TimelineJson"
                    }
                }
            }
        },
        "subscan_internal_model.TreasuryProposalJson": {
            "type": "object",
            "properties": {
                "beneficiary": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "created_block": {
                    "type": "integer"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "proposer": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "reward": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.TreasuryTip": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "beneficiary": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "close_block_num": {
                    "type": "integer"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "finder": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "hash": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tipper_num": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.TreasuryTipJson": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "beneficiary": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_timestamp": {
                    "type": "integer"
                },
                "close_block_num": {
                    "type": "integer"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "finder": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "hash": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timeline": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TimelineJson"
                    }
                },
                "tipper_num": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.TreasuryTipperJson": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "extrinsic_index": {
                    "type": "string"
                },
                "rewarder": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                }
            }
        },
        "subscan_internal_model.ValidatorJson": {
            "type": "object",
            "properties": {
                "bonded_nominators": {
                    "type": "number"
                },
                "bonded_owner": {
                    "type": "number"
                },
                "bonded_total": {
                    "type": "number"
                },
                "controller_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "count_nominators": {
                    "type": "integer"
                },
                "grandpa_vote": {
                    "type": "integer"
                },
                "latest_mining": {
                    "type": "integer"
                },
                "rank_validator": {
                    "type": "integer"
                },
                "reward_point": {
                    "type": "integer"
                },
                "session_key": {
                    "$ref": "#/definitions/subscan_internal_model.SessionKeys"
                },
                "staking_rewards_tag": {
                    "$ref": "#/definitions/subscan_libs_stakingrewards.Provider"
                },
                "stash_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "status": {
                    "type": "string"
                },
                "validator_prefs_value": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ValidatorStatJson": {
            "type": "object",
            "properties": {
                "block_produced": {
                    "type": "string"
                },
                "end_block_num": {
                    "type": "integer"
                },
                "era": {
                    "type": "integer"
                },
                "reward": {
                    "type": "number"
                },
                "reward_point": {
                    "type": "integer"
                },
                "slash": {
                    "type": "number"
                },
                "start_block_num": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.ValidatorWaiting": {
            "type": "object",
            "properties": {
                "bonded_nominators": {
                    "type": "number"
                },
                "bonded_owner": {
                    "type": "number"
                },
                "count_nominators": {
                    "type": "integer"
                },
                "node_name": {
                    "type": "string"
                },
                "reward_account": {
                    "type": "string"
                },
                "reward_pot_balance": {
                    "type": "number"
                },
                "stash_account_display": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "validator_prefs_value": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_model.VestingJson": {
            "type": "object",
            "properties": {
                "linear_schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.LinearVestingSchedule"
                    }
                },
                "orml_schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.OrmlVestingSchedule"
                    }
                },
                "pallet_schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.PalletVestingSchedule"
                    }
                },
                "total_locked": {
                    "$ref": "#/definitions/subscan_internal_types.Balance"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_model.VestingRelease": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "block_num": {
                    "type": "integer"
                },
                "day": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_plugin_nfts_db.CollectionBalance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 1
                },
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "collection_name": {
                    "type": "string",
                    "example": "Kusama Crowdloans"
                },
                "item_id": {
                    "type": "number",
                    "example": 1
                },
                "token_metadata": {
                    "$ref": "#/definitions/subscan_internal_model.MetadataSample"
                }
            }
        },
        "subscan_internal_plugin_nfts_db.CollectionItemJson": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "collection_id": {
                    "type": "number",
                    "example": 126
                },
                "data": {
                    "type": "string",
                    "example": "ipfs://ipfs/bafkreiga2srd2royhpxav3migytg35ny5ph74sbqhfxujwqu6tpoio5ize"
                },
                "holder": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "item_id": {
                    "type": "number",
                    "example": 1
                },
                "metadata": {
                    "$ref": "#/definitions/subscan_internal_model.StandardMetadata"
                }
            }
        },
        "subscan_internal_plugin_nfts_db.ItemSample": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "collection_name": {
                    "type": "string",
                    "example": "Kusama Crowdloans"
                },
                "item_id": {
                    "type": "integer",
                    "example": 1
                },
                "metadata": {
                    "$ref": "#/definitions/subscan_internal_model.StandardMetadata"
                },
                "owner": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "transfer_count": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_plugin_nfts_db.NftHolderJson": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer",
                    "example": 1
                },
                "holder": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                }
            }
        },
        "subscan_internal_plugin_nfts_db.NftRelateExtrinsic": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer",
                    "example": 5296820
                },
                "block_timestamp": {
                    "type": "integer",
                    "example": 1693996722
                },
                "collection_id": {
                    "type": "number",
                    "example": 129
                },
                "event_id": {
                    "type": "string",
                    "example": "ItemMetadataSet"
                },
                "event_index": {
                    "type": "string",
                    "example": "5296820-26"
                },
                "extrinsic_index": {
                    "type": "string",
                    "example": "5296820-3"
                },
                "item_id": {
                    "type": "number",
                    "example": 1
                },
                "module_id": {
                    "type": "string",
                    "example": "nfts"
                }
            }
        },
        "subscan_internal_plugin_nfts_db.NftsJson": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "data": {
                    "type": "string",
                    "example": "ipfs://ipfs/bafkreiga2srd2royhpxav3migytg35ny5ph74sbqhfxujwqu6tpoio5ize"
                },
                "holders": {
                    "type": "integer",
                    "example": 10
                },
                "is_destroyed": {
                    "type": "boolean",
                    "example": false
                },
                "items": {
                    "type": "integer",
                    "example": 10
                },
                "metadata": {
                    "$ref": "#/definitions/subscan_internal_model.StandardMetadata"
                },
                "owner": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "total_supply": {
                    "type": "integer",
                    "example": 10
                },
                "unique_id": {
                    "type": "string",
                    "example": "standard_nfts/126"
                }
            }
        },
        "subscan_internal_plugin_nfts_db.NftsSampleJson": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "collection_image": {
                    "type": "string",
                    "example": "https://ipfs.io/ipfs/bafkreihmb2esqysriq46l2uutyu2bqxkzlgluarbr36kom3hrykd2ku42u"
                },
                "collection_name": {
                    "type": "string",
                    "example": "Retrowave"
                },
                "holders": {
                    "type": "integer",
                    "example": 10
                },
                "items": {
                    "type": "integer",
                    "example": 10
                },
                "owner": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "transfer_count": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "subscan_internal_plugin_share.J": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "generated_at": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_plugin_unique_unique_db.CollectionBalance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 1
                },
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "collection_name": {
                    "type": "string",
                    "example": "Kusama Crowdloans"
                },
                "item_id": {
                    "type": "number",
                    "example": 1
                },
                "token_metadata": {
                    "$ref": "#/definitions/subscan_internal_model.MetadataSample"
                }
            }
        },
        "subscan_internal_plugin_unique_unique_db.CollectionItemJson": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 126
                },
                "collection_name": {
                    "type": "string"
                },
                "create_at": {
                    "type": "integer"
                },
                "holder": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "item_id": {
                    "type": "number",
                    "example": 1
                },
                "metadata": {
                    "$ref": "#/definitions/subscan_internal_model.StandardMetadata"
                },
                "nested": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_plugin_unique_unique_db.NestedItem"
                    }
                },
                "nested_type": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_plugin_unique_unique_db.ItemSample": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "collection_name": {
                    "type": "string",
                    "example": "Kusama Crowdloans"
                },
                "item_id": {
                    "type": "integer",
                    "example": 1
                },
                "metadata": {
                    "$ref": "#/definitions/subscan_internal_model.StandardMetadata"
                },
                "owner": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "transfer_count": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_plugin_unique_unique_db.NestedItem": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 126
                },
                "collection_name": {
                    "type": "string"
                },
                "holder": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "item_id": {
                    "type": "number",
                    "example": 1
                },
                "metadata": {
                    "$ref": "#/definitions/subscan_internal_model.MetadataSample"
                },
                "nested_type": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_plugin_unique_unique_db.NftHolderJson": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer",
                    "example": 1
                },
                "holder": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                }
            }
        },
        "subscan_internal_plugin_unique_unique_db.NftRelateExtrinsic": {
            "type": "object",
            "properties": {
                "block_num": {
                    "type": "integer",
                    "example": 5296820
                },
                "block_timestamp": {
                    "type": "integer",
                    "example": 1693996722
                },
                "collection_id": {
                    "type": "number",
                    "example": 129
                },
                "event_id": {
                    "type": "string",
                    "example": "ItemMetadataSet"
                },
                "event_index": {
                    "type": "string",
                    "example": "5296820-26"
                },
                "extrinsic_index": {
                    "type": "string",
                    "example": "5296820-3"
                },
                "item_id": {
                    "type": "number",
                    "example": 1
                },
                "module_id": {
                    "type": "string",
                    "example": "nfts"
                }
            }
        },
        "subscan_internal_plugin_unique_unique_db.NftsJson": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "create_at": {
                    "type": "integer"
                },
                "holders": {
                    "type": "integer",
                    "example": 10
                },
                "is_destroyed": {
                    "type": "boolean",
                    "example": false
                },
                "items": {
                    "type": "integer",
                    "example": 10
                },
                "metadata": {
                    "$ref": "#/definitions/subscan_internal_model.StandardMetadata"
                },
                "owner": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "total_supply": {
                    "type": "integer",
                    "example": 10
                },
                "unique_id": {
                    "type": "string",
                    "example": "standard_nfts/126"
                }
            }
        },
        "subscan_internal_plugin_unique_unique_db.NftsSampleJson": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number",
                    "example": 1
                },
                "collection_name": {
                    "type": "string",
                    "example": "Retrowave"
                },
                "holders": {
                    "type": "integer",
                    "example": 10
                },
                "items": {
                    "type": "integer",
                    "example": 10
                },
                "owner": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "transfer_count": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "subscan_internal_plugin_uniques_db.ItemSample": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "number"
                },
                "collection_name": {
                    "type": "string"
                },
                "item_id": {
                    "type": "integer"
                },
                "metadata": {
                    "$ref": "#/definitions/subscan_internal_model.StandardMetadata"
                },
                "owner": {
                    "$ref": "#/definitions/subscan_internal_model.AccountDisplay"
                },
                "transfer_count": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_service_scan.AccountTokenJson": {
            "type": "object",
            "properties": {
                "ERC20": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TokenJson"
                    }
                },
                "ERC721": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TokenJson"
                    }
                },
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TokenJson"
                    }
                },
                "builtin": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TokenJson"
                    }
                },
                "native": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_model.TokenJson"
                    }
                }
            }
        },
        "subscan_internal_service_scan.CurrencyPrice": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscan_internal_service_scan.PriceRecord"
                    }
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_service_scan.Price": {
            "type": "object",
            "properties": {
                "feed_at": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_service_scan.PriceRecord": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "subscan_internal_service_scan.uniqueBid": {
            "type": "object",
            "properties": {
                "bid_id": {
                    "type": "string"
                },
                "fund_id": {
                    "type": "string"
                },
                "leading_blocks": {
                    "type": "integer"
                },
                "para_id": {
                    "type": "integer"
                },
                "unique_key": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_service_scan_token.AssetType": {
            "type": "string",
            "enum": [
                "native",
                "builtin"
            ],
            "x-enum-varnames": [
                "TypeNative",
                "TypeBuiltin"
            ]
        },
        "subscan_internal_service_scan_token.ExternalDataSource": {
            "type": "object",
            "properties": {
                "authorization_source": {
                    "type": "string"
                },
                "circulating_supply": {
                    "type": "number"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "subscan_internal_service_scan_token.Token": {
            "type": "object",
            "properties": {
                "asset_type": {
                    "$ref": "#/definitions/subscan_internal_service_scan_token.AssetType"
                },
                "available_balance": {
                    "type": "number"
                },
                "bonded_locked_balance": {
                    "type": "number"
                },
                "democracy_locked_balance": {
                    "type": "number"
                },
                "display_name": {
                    "type": "string"
                },
                "election_locked_balance": {
                    "type": "number"
                },
                "external_data": {
                    "$ref": "#/definitions/subscan_internal_service_scan_token.ExternalDataSource"
                },
                "free_balance": {
                    "type": "number"
                },
                "inflation": {
                    "type": "number"
                },
                "locked_balance": {
                    "type": "number"
                },
                "nominator_bonded": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                },
                "price_change": {
                    "type": "number"
                },
                "reserved_balance": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "token_decimals": {
                    "type": "integer"
                },
                "total_issuance": {
                    "type": "number"
                },
                "unbonded_locked_balance": {
                    "type": "number"
                },
                "unique_id": {
                    "type": "string"
                },
                "validator_bonded": {
                    "type": "number"
                },
                "vesting_balance": {
                    "type": "number"
                }
            }
        },
        "subscan_internal_types.Balance": {
            "type": "object",
            "properties": {
                "types.Balance": {
                    "type": "number"
                }
            }
        },
        "subscan_libs_stakingrewards.Provider": {
            "type": "object",
            "properties": {
                "isVerified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "subscan_libs_substrate.MetadataModuleError": {
            "type": "object",
            "properties": {
                "doc": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "module": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "subscan_libs_substrate_derive.Unbonding": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "until": {
                    "type": "integer"
                }
            }
        },
        "subscan_libs_substrate_storage.LinearDecreasing": {
            "type": "object",
            "properties": {
                "ceil": {
                    "type": "integer"
                },
                "floor": {
                    "type": "integer"
                },
                "length": {
                    "type": "integer"
                }
            }
        },
        "subscan_libs_substrate_storage.Reciprocal": {
            "type": "object",
            "properties": {
                "factor": {
                    "type": "number"
                },
                "x_offset": {
                    "type": "number"
                },
                "y_offset": {
                    "type": "number"
                }
            }
        },
        "subscan_libs_substrate_storage.ReferendaCurve": {
            "type": "object",
            "properties": {
                "LinearDecreasing": {
                    "$ref": "#/definitions/subscan_libs_substrate_storage.LinearDecreasing"
                },
                "Reciprocal": {
                    "$ref": "#/definitions/subscan_libs_substrate_storage.Reciprocal"
                },
                "SteppedDecreasing": {
                    "$ref": "#/definitions/subscan_libs_substrate_storage.SteppedDecreasing"
                }
            }
        },
        "subscan_libs_substrate_storage.ReferendumTracksInfo": {
            "type": "object",
            "properties": {
                "confirm_period": {
                    "type": "integer"
                },
                "current_deciding": {
                    "description": "custom field",
                    "type": "integer"
                },
                "decision_deposit": {
                    "type": "number"
                },
                "decision_period": {
                    "type": "integer"
                },
                "max_deciding": {
                    "type": "integer"
                },
                "min_approval": {
                    "$ref": "#/definitions/subscan_libs_substrate_storage.ReferendaCurve"
                },
                "min_enactment_period": {
                    "type": "integer"
                },
                "min_support": {
                    "$ref": "#/definitions/subscan_libs_substrate_storage.ReferendaCurve"
                },
                "name": {
                    "type": "string"
                },
                "prepare_period": {
                    "type": "integer"
                }
            }
        },
        "subscan_libs_substrate_storage.SteppedDecreasing": {
            "type": "object",
            "properties": {
                "begin": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "period": {
                    "type": "integer"
                },
                "step": {
                    "type": "integer"
                }
            }
        },
        "types.MapType": {
            "type": "object",
            "properties": {
                "hasher": {
                    "type": "string"
                },
                "isLinked": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "key2": {
                    "type": "string"
                },
                "key2Hasher": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "types.MetadataCalls": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.MetadataModuleCallArgument"
                    }
                },
                "docs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lookup": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.MetadataConstants": {
            "type": "object",
            "properties": {
                "constants_value": {
                    "type": "string"
                },
                "docs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "type_value": {
                    "type": "integer"
                }
            }
        },
        "types.MetadataEvents": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "args_name": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "args_type_name": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "docs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lookup": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.MetadataModuleCallArgument": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "type_name": {
                    "type": "string"
                }
            }
        },
        "types.MetadataModuleError": {
            "type": "object",
            "properties": {
                "doc": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ModuleErrorField"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.MetadataModules": {
            "type": "object",
            "properties": {
                "calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.MetadataCalls"
                    }
                },
                "calls_value": {
                    "$ref": "#/definitions/types.PalletLookUp"
                },
                "constants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.MetadataConstants"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.MetadataModuleError"
                    }
                },
                "errors_value": {
                    "$ref": "#/definitions/types.PalletLookUp"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.MetadataEvents"
                    }
                },
                "events_value": {
                    "$ref": "#/definitions/types.PalletLookUp"
                },
                "index": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "storage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.MetadataStorage"
                    }
                }
            }
        },
        "types.MetadataStorage": {
            "type": "object",
            "properties": {
                "docs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fallback": {
                    "type": "string"
                },
                "hasher": {
                    "type": "string"
                },
                "modifier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/types.StorageType"
                }
            }
        },
        "types.ModuleErrorField": {
            "type": "object",
            "properties": {
                "doc": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "type_name": {
                    "type": "string"
                }
            }
        },
        "types.NMapType": {
            "type": "object",
            "properties": {
                "hashers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key_vec": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keys_id": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                },
                "value_id": {
                    "type": "integer"
                }
            }
        },
        "types.PalletLookUp": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "integer"
                }
            }
        },
        "types.StorageType": {
            "type": "object",
            "properties": {
                "PlainTypeValue": {
                    "type": "integer"
                },
                "double_map_type": {
                    "$ref": "#/definitions/types.MapType"
                },
                "map_type": {
                    "$ref": "#/definitions/types.MapType"
                },
                "n_map_type": {
                    "$ref": "#/definitions/types.NMapType"
                },
                "origin": {
                    "type": "string"
                },
                "plain_type": {
                    "type": "string"
                }
            }
        }
    }
}